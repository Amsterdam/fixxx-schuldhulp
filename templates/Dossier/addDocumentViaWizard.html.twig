{% extends 'base.html.twig' %}

{% block title %}
	Bulk-upload documenten
{% endblock %}

{% block extraScripts %}
<link rel="stylesheet" href="/css/wizard.css">
<script src="/vendor/mozilla/pdf.js/build/pdf.js"></script>
<script src="/vendor/mrrio/jspdf/jspdf.js"></script>
<script src="/vendor/mrrio/jspdf/plugins/addimage.js"></script>
<script>

window.onload = function () {
	accordeon();
	maakUploadWizard();
}

function maakUploadWizard() {
	var scale = 3; // nog te bekijken

	$('completeDocument').onchange = function () {
		var URL = window.URL.createObjectURL(this.files[0]);
		laadPDF(URL);
	}
	
	function laadPDF(URL) {
		var pages;
		PDFJS.getDocument(URL).then(function (pdf) {
			var wr = $('canvases');
			pages = pdf.numPages;
			for (var i=1;i<=pages;i+=1) {
				console.log('Init pagina ' + i);
				pdf.getPage(i).then(function (page) {
					var canvas = document.createElement('canvas');
					canvas.id = 'id'+page.pageIndex;
					var viewport = page.getViewport(scale);
					var context = canvas.getContext('2d');
					canvas.width = viewport.width;
					canvas.height = viewport.height;

					var renderContext = {
						canvasContext: context,
						viewport: viewport
					};
					page.render(renderContext);
					wr.appendChild(canvas);
					logKlaar(page.pageIndex);
				});
			}
			console.log('Loop beeindigd');
		});
		
		var logObj = {};
				
		function logKlaar(nummer) {
			console.log('Pagina ' + nummer + ' klaar');
			logObj['p'+nummer] = true;
			for (var i=0;i<pages;i+=1) {
				if (!logObj['p'+i]) {
					return;
				}
			}
			console.log('Geheel klaar');
			PDFJS = null;
			
		}
		
		// hier closure afbreken
		// destroy PDFJS
	
	}
	
	var groteCanvas = $('groot');
	var nieuweContext = groteCanvas.getContext('2d');
	$('canvases').onclick = function (e) {
		var tgt = e.target;
		if (tgt.nodeName === 'CANVAS') {
			if (tgt.classList.contains('actief')) {
				tgt.classList.remove('actief');
			}
			groteCanvas.width = e.target.width;
			groteCanvas.height = e.target.height;
			nieuweContext.drawImage(e.target,0,0); 
			tgt.classList.add('actief');
			if (actiefFormulier) {
				var nieuwID = e.target.id + 'copy';
				var canvas;
				if ($(nieuwID)) {
					canvas = $(nieuwID);
				} else {
					canvas = document.createElement('canvas');
					var thumbContext = canvas.getContext('2d');
					canvas.width = e.target.width;
					canvas.height = e.target.height;
					thumbContext.drawImage(e.target,0,0);
					canvas.id = nieuwID;
				}
				actiefFormulier.querySelector('.uploadCanvases').appendChild(canvas);
			}
		}
	}

	var actiefFormulier;	
	$('nieuwForm').onclick = function () {
		var newForm = $('templateForm').cloneNode(true);
		newForm.id = '';
		newForm.querySelector('.activeer').onclick = function () {
			if (actiefFormulier) {
				actiefFormulier.classList.remove('actief');
			}
			if (actiefFormulier === newForm) {
				actiefFormulier = null;
				return false;
			}
			actiefFormulier = newForm;
			newForm.uploadList = {};
			newForm.classList.add('actief');
			return false;
		}
		newForm.onsubmit = stuurFormulier;
		newForm.querySelector('input[type=file]').required = false;
		$('insertForm').parentNode.insertBefore(newForm,$('insertForm'))
	}
	$('nieuwForm').onclick();
	
	function stuurFormulier() {
		var form = this;
		var canvases = form.querySelectorAll('canvas'),
			newPDF = new jsPDF(),
			imgData
		;
		if (!canvases.length) {
			return;
		}
		for (var i=0,cv;cv=canvases[i];i+=1) {
			if (i > 0) {
				newPDF.addPage();	
			}
			imgData = cv.toDataURL("image/jpeg");
			newPDF.addImage(imgData, 'JPEG', 15, 40, 180, 180);
		}
		var linkData = {};
		linkData.container = form;
		linkData.naam = form.querySelector('input[type=text]').value;
		console.log(linkData.naam);
		linkData.onderwerp = form.querySelector('select').value;
		var data = new FormData(form);
		data.append('dossier_document_form[document][file]',newPDF.output('blob'),'document');
		sendRequest(location.href,function (req) {
			if (req.status === 201) {
				form.querySelector('.spinnerContainer').style.display = '';
				var resp = JSON.parse(req.response);
				linkData.link = resp.document.url;
				newPDF = null;
				maakLink(linkData);
			}
		},data)
		form.querySelector('.spinnerContainer').style.display = 'block'
		return false;
	}

	function maakLink(data) {
		var div = $('resultaatTemplate').cloneNode(true);
		div.id = '';
		div.querySelector('span').innerHTML = data.onderwerp;
		var link = div.querySelector('a');
		link.href = data.link;
		link.innerHTML = data.naam;
		var form = data.container;
		form.parentNode.insertBefore(div,form);
		form.parentNode.removeChild(form);
		
	}


	return;
	function maak() {
		var img = document.createElement('img');
		img.src = imgData;
		document.body.appendChild(img);
		
		
		newPDF.addImage(imgData, 'JPEG', 15, 40, 180, 180);
		var form = document.forms['dossier_document_form'];
	};
}

function accordeon() {
	document.addEventListener('click',function (e) {
		var source = e.target;
		if (source.nodeName === 'H3') {
			var tgt = source.nextElementSibling;
			if (tgt.style.display === 'block') {
				tgt.style.display = 'none';
			} else {
				tgt.style.display = 'block';			
			}
		}
	},false);
	document.querySelector('.naast h3').click();
}

function $(id) {
	return document.getElementById(id);
}

</script>
{% endblock %}

{% block kleineNavigatie %}
	<p class="kleineNav"><a href="{{ path('gemeenteamsterdam_fixxxschuldhulp_appdossier_detail', {'dossierId': dossier.id}) }}">Terug naar dossier</a></p>
{% endblock %}


{% block main %}
    <h1>Voeg document toe aan dossier {{ dossier.clientNaam }}</h1>
    
    <section class="hoofd">    
    <input type="file" id="completeDocument">
    <div id="canvases"></div>
    <canvas id="groot"></canvas>
    </section>
    
    <section class="naast">
	{% set kopje = "" %}
    {% for categorie in categorieen %}
    	{% if categorie.isKop is defined %}
			<h2>{{ categorie.schermNaam }}</h2>    	
			{% set kopje = categorie.schermNaam %}
    	{% else %}
			{% if categorie.kop != kopje %}
				<h2>{{ categorie.kop }}</h2>
				{% set kopje = categorie.kop %}
			{% endif %}
			<h3>{{ categorie.schermNaam }}</h3>
			<div class="container">
				<form>
				<div class="naam"><input placeholder="Naam document"></div>
				<div class="uploadCanvases"></div>
				<div class="knoppenbalk">
					<button class="secundair activeer">Nieuw document</button><button class="upload primair">Opslaan en volgende</button>
				</div>
				</forn>
			</div>
    	{% endif %}
    {% endfor %}
    <div class="knoppenbalk" id="insertForm">
	<button class="secundair" id="nieuwForm">Nieuw formulier</button>
	<button class="secundair">Klaar</button>
	</div>
    </section>


	<div id="templates">
    {{ form_start(form,{attr: {id:'templateForm'}}) }}
    <span class="spinnercontainer"><img src="/pix/spinner.gif"></span>
    <table>
    {{ form_row(form.document.naam) }}
    {{ form_row(form.onderwerp) }}
    </table>    
    <div class="knoppenbalk">
    <button class="secundair activeer">Maak actief formulier</button><button class="upload primair">Dit uploaden</button>
    </div>
    {{ form_widget(form.document.file) }}
    {{ form_end(form) }}
    
    <div id="resultaatTemplate">
    	<p>Document upgeload naar <span></span>.</p>
    	<p><a href="#" target="_blank"></a></p>
    </div>
    </div>
    
{% endblock %}	