<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Voeg document toe aan dossier</title>
<meta name="viewport" content="width = device-width">
<link rel="stylesheet" href="/css/styles.css">
<script src="/vendor/mozilla/pdf.js/build/pdf.js"></script>
<script src="/vendor/mrrio/jspdf/jspdf.js"></script>
<script src="/vendor/mrrio/jspdf/plugins/addimage.js"></script>
<script src="/js/script.js"></script>
<style>

div.canvascontainer {
	overflow: auto;
}

div#canvases {
	margin: 0 5%;
}

div.canvascontainer canvas {
	width: 100px;
	border: 2px solid black;
	margin: 5px;
}

.actief {
	border: 2px solid red !important;
}

canvas#groot  {
	width: 90%;
	margin: 15px auto;
	display: block;
}

main {
	display: flex;
	flex-wrap: wrap;
	box-sizing: border-box;
}

section.naast input[type=file] {
	display: none;
}

main h1 {
	flex-basis: 100%;
}

main section.hoofd {
	flex-basis: 60%;
	max-width: 60%;
	border: 1px solid;
	flex-grow: 1;
}

main section.naast {
	flex-basis: 30%;
	border: 1px solid;
}

section.naast form {
	margin: 10px;
	border: 1px solid;
}

div.knoppenbalk {
	margin: 10px;
	display: flex;
	justify-content: space-between;
	
}


</style>
<script>

window.onload = function () {
	maakUploadWizard();
}

function maakUploadWizard() {
	var scale = 3; // nog te bekijken

	$('completeDocument').onchange = function () {
		var URL = window.URL.createObjectURL(this.files[0]);
		laadPDF(URL);
	}
	
	function laadPDF(URL) {
		PDFJS.getDocument(URL).then(function (pdf) {
			var wr = $('canvases');
			var pages = pdf.numPages;
			$('canvases').style.width = 114*(pages) + 'px';
			for (var i=1;i<=pages;i+=1) {
				pdf.getPage(i).then(function (page) {
					var canvas = document.createElement('canvas');
					canvas.id = 'id'+page.pageIndex;
					var viewport = page.getViewport(scale);
					var context = canvas.getContext('2d');
					canvas.width = viewport.width;
					canvas.height = viewport.height;

					var renderContext = {
						canvasContext: context,
						viewport: viewport
					};
					page.render(renderContext);
					wr.appendChild(canvas);
				});
			}
		});
		var groteCanvas = $('groot');
		var nieuweContext = groteCanvas.getContext('2d');
	
		$('canvases').onclick = function (e) {
			var tgt = e.target;
			if (tgt.nodeName === 'CANVAS') {
				if (tgt.classList.contains('actief')) {
					tgt.classList.remove('actief');
				}
				groteCanvas.width = e.target.width;
				groteCanvas.height = e.target.height;
				nieuweContext.drawImage(e.target,0,0); 
				tgt.classList.add('actief');
				if (actiefFormulier) {
					var nieuwID = e.target.id + 'copy';
					console.log(nieuwID);
					var canvas;
					if ($(nieuwID)) {
						canvas = $(nieuwID);
					} else {
						canvas = document.createElement('canvas');
						var thumbContext = canvas.getContext('2d');
						canvas.width = e.target.width;
						canvas.height = e.target.height;
						thumbContext.drawImage(e.target,0,0);
						canvas.id = nieuwID;
					}
					actiefFormulier.querySelector('.uploadCanvases').appendChild(canvas);
				}
			}
		}
	}
	
	var actiefFormulier;
	
	$('nieuwForm').onclick = function () {
		var newForm = $('templateForm').cloneNode(true);
		newForm.id = '';
		newForm.querySelector('.activeer').onclick = function () {
			if (actiefFormulier) {
				actiefFormulier.classList.remove('actief');
			}
			if (actiefFormulier === newForm) {
				actiefFormulier = null;
				return false;
			}
			actiefFormulier = newForm;
			newForm.uploadList = {};
			newForm.classList.add('actief');
			return false;
		}
		$('insertForm').parentNode.insertBefore(newForm,$('insertForm'))
	}
	$('nieuwForm').onclick();

	return;
	$('grab').onclick = function () {
		var img = document.createElement('img');
		var imgData = document.getElementById('the-canvas').toDataURL("image/jpeg");
		img.src = imgData;
		document.body.appendChild(img);
		
		var newPDF = new jsPDF();
		
		newPDF.addImage(imgData, 'JPEG', 15, 40, 180, 180);
		newPDF.addPage();
		newPDF.addImage(imgData, 'JPEG', 15, 40, 180, 180);
		var form = document.forms['dossier_document_form'];
		console.log(typeof newPDF.output('blob'));
		var data = new FormData(form);
		data.append('dossier_document_form[document][file]',newPDF.output('blob'),$('completeDocument').value);
		sendRequest(location.href,function (req) {
			for (var i in req) {
				console.log(i + ': ' + req[i]);
			}
		},data)
	};
}

function $(id) {
	return document.getElementById(id);
}

</script>
</head>

<body>
	<header>
	<img src="/pix/logo_klein.svg">
	<h2>Digitale voorlegger</h2>
	<div>Ingelogd als: Petriculus Pucq <a href="#">(Uitloggen)</a></div>
    </header>
	
	<p class="kleinNav"><a href="{{ path('gemeenteamsterdam_fixxxschuldhulp_appdossier_detail', {'dossierId': dossier.id}) }}">Terug naar dossier</a></p>


	<main>
    <h1>Voeg document toe aan dossier {{ dossier.clientNaam }}</h1>
    
    <section class="hoofd">    
    <input type="file" id="completeDocument">
    <div class="canvascontainer"><div id="canvases"></div></div>
    <canvas id="groot"></canvas>
    </section>
    
    <section class="naast">
    <div class="knoppenbalk" id="insertForm">
	<button class="secundair" id="nieuwForm">Nieuw formulier</button>
	<button class="secundair">Klaar</button>
	</div>
    </section>


	</main>
	
    {{ form_start(form,{attr: {id:'templateForm'}}) }}
    <table>
    {{ form_row(form.document.naam) }}
    {{ form_row(form.onderwerp) }}
    </table>    
    <div class="canvascontainer"><div class="uploadCanvases"></div></div>
    <div class="knoppenbalk">
    <button class="secundair activeer">Maak actief formulier</button><button class="upload primair">Dit uploaden</button>
    </div>
    {{ form_widget(form.document.file) }}
    {{ form_end(form) }}

</body>
</html>